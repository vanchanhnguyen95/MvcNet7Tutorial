@using MvcNet7.Helper;
@model PaginatedList<MvcNet7.Models.Order>

@{
    ViewData["Title"] = "Index";
}

<p>
    <a asp-action="AddOrder">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Enter category to search: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ProductNameParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Product Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CategoryNameParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Category Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CustomerNameParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Customer Name</a>
            </th>
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">OrderDate</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Order Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AmountSortParm"]">Amount</a>
            </th>
            @*<th></th>*@
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                @*<td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>*@
            </tr>
        }
    </tbody>
</table>

<div class="container">
    <div class="row">
        <div></div>
    </div>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>